package view;

import java.awt.CardLayout;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.Products;
import controller.FileHandling;
import controller.Transaction;

public class POSForm extends javax.swing.JFrame {

    /**
     * Creates new form POSForm
     *
     * @param accessType
     */
    public POSForm(String accessType) {
        super("PAZADO");
        initComponents();                   //netbeans generated components
        myInitComponents();                 //my own components, manual
        if ("admin".equals(accessType)) {
            btn_inventoryPanel_Add.setVisible(true);
            btn_inventoryPanel_Update.setVisible(true);
            lblUser.setVisible(true);
        } else {
            tbl_Inventory.setFocusable(false);
            btn_inventoryPanel_Add.setVisible(false);
            btn_inventoryPanel_Update.setVisible(false);
            lblUser.setText("USER LOGGED IN");
        }
    }

    private DefaultTableModel dtm;                  //data model to insert in inventory table
    private DefaultTableModel orderData;            //data model to insert in order summary table

    private Transaction trans;
    private FileHandling fh;
    private Products prod;

    private void myInitComponents() {
        trans = new Transaction();
        fh = new FileHandling();
        prod = new Products();
        dtm = new DefaultTableModel(0, 0);
        ImageIcon img = new ImageIcon("./src/images/logo.png");
        this.setIconImage(img.getImage());
        this.setLocationRelativeTo(null);
        btn_productPanel_Checkout.setVisible(false);
        btn_reviewPanel_ResumeShopping.setVisible(false);
        btn_reviewPanel_Checkout.setVisible(false);
        trans.started = false;

        refreshProductList();

        setTransactionNumber();

        itmOrder.setVisible(false);

        tbl_YourCart.getModel().addTableModelListener((TableModelEvent e) -> {
            refreshOrderList(trans);    //refresh order list whenever there is a change on the table (Your Cart)
        });

        this.addWindowListener(
                new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent winEvt) {
                int n = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Exit", JOptionPane.YES_NO_OPTION);
                if (n == JOptionPane.YES_OPTION) {
                    if (trans.started && !trans.complete) {
                        cancelTransaction();
                    }
                    System.exit(0);
                }
            }
        }
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainMenu = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        HEADER10 = new javax.swing.JPanel();
        logo10 = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        btn_menuPanel_Exit = new javax.swing.JButton();
        btn_menuPanel_View = new javax.swing.JButton();
        btn_menuPanel_New = new javax.swing.JButton();
        transactionPanel = new javax.swing.JPanel();
        productPanel = new javax.swing.JPanel();
        lblSelect = new javax.swing.JLabel();
        cmbProducts = new javax.swing.JComboBox<>();
        lblPName = new javax.swing.JLabel();
        txt_productPanel_Name = new javax.swing.JTextField();
        lblStock = new javax.swing.JLabel();
        txt_productPanel_Quantity = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        txt_productPanel_Price = new javax.swing.JTextField();
        btn_productPanel_Order = new javax.swing.JButton();
        HEADER1 = new javax.swing.JPanel();
        logo1 = new javax.swing.JLabel();
        lblTransNo = new javax.swing.JLabel();
        btn_productPanel_Cancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btn_productPanel_Checkout = new javax.swing.JButton();
        txt_productPanel_OrderQuantity = new javax.swing.JTextField();
        reviewPanel = new javax.swing.JPanel();
        detailsPanel = new javax.swing.JPanel();
        txt_reviewPanel_Price = new javax.swing.JTextField();
        txt_reviewPanel_Name = new javax.swing.JTextField();
        txt_reviewPanel_OrderQuantity = new javax.swing.JTextField();
        txt_reviewPanel_CurrentStock = new javax.swing.JTextField();
        lblHowManyOrders = new javax.swing.JLabel();
        btn_reviewPanel_CancelOrder = new javax.swing.JButton();
        btn_reviewPanel_AddToCart = new javax.swing.JButton();
        lblPName1 = new javax.swing.JLabel();
        lblOrderedPrice = new javax.swing.JLabel();
        lblCurrStock = new javax.swing.JLabel();
        HEADER2 = new javax.swing.JPanel();
        logo2 = new javax.swing.JLabel();
        lblTransNo1 = new javax.swing.JLabel();
        btn_reviewPanel_ResumeShopping = new javax.swing.JButton();
        btn_reviewPanel_Checkout = new javax.swing.JButton();
        btn_reviewPanel_Cancel = new javax.swing.JButton();
        cartPanel = new javax.swing.JPanel();
        btn_cartPanel_AddMore = new javax.swing.JButton();
        btn_cartPanel_Remove = new javax.swing.JButton();
        btn_cartPanel_Cancel = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_YourCart = new javax.swing.JTable();
        btn_cartPanel_Transact = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_cartPanel_Cash = new javax.swing.JTextField();
        HEADER7 = new javax.swing.JPanel();
        logo7 = new javax.swing.JLabel();
        lblTransNo3 = new javax.swing.JLabel();
        lblTotalPriceWithVat = new javax.swing.JLabel();
        txt_cartPanel_TotalPrice = new javax.swing.JTextField();
        btn_cartPanel_Edit = new javax.swing.JButton();
        summaryPanel = new javax.swing.JPanel();
        lblItemCount = new javax.swing.JLabel();
        lblSubtotal = new javax.swing.JLabel();
        lblVAT = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        lblPaidAmount = new javax.swing.JLabel();
        txt_summaryPanel_PaidAmount = new javax.swing.JTextField();
        txt_summaryPanel_Total = new javax.swing.JTextField();
        txt_summaryPanel_VAT = new javax.swing.JTextField();
        txt_summaryPanel_Subtotal = new javax.swing.JTextField();
        txt_summaryPanel_ItemCount = new javax.swing.JTextField();
        lblChange = new javax.swing.JLabel();
        txt_summaryPanel_Change = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_Receipt = new javax.swing.JTable();
        HEADER9 = new javax.swing.JPanel();
        logo9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_summaryPanel_MainMenu = new javax.swing.JButton();
        lblTransNo4 = new javax.swing.JLabel();
        inventoryPanel = new javax.swing.JPanel();
        viewInventoryPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Inventory = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        HEADER = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        btn_inventoryPanel_Add = new javax.swing.JButton();
        btn_inventoryPanel_Update = new javax.swing.JButton();
        btn_inventoryPanel_MainMenu = new javax.swing.JButton();
        addNewPanel = new javax.swing.JPanel();
        HEADER3 = new javax.swing.JPanel();
        logo3 = new javax.swing.JLabel();
        lblAdditem = new javax.swing.JLabel();
        lblProductName = new javax.swing.JLabel();
        lblAvailableStock = new javax.swing.JLabel();
        lblPriceInv = new javax.swing.JLabel();
        txt_addItemPanel_ProductName = new javax.swing.JTextField();
        txt_addItemPanel_AvailStock = new javax.swing.JTextField();
        txt_addItemPanel_Price = new javax.swing.JTextField();
        btn_addItemPanel_Add = new javax.swing.JButton();
        btn_addItemPanel_Cancel = new javax.swing.JButton();
        addExistingPanel = new javax.swing.JPanel();
        HEADER4 = new javax.swing.JPanel();
        logo4 = new javax.swing.JLabel();
        lblAdditem1 = new javax.swing.JLabel();
        lblProductName1 = new javax.swing.JLabel();
        lblAvailableStock1 = new javax.swing.JLabel();
        lblPriceInv1 = new javax.swing.JLabel();
        txt_addExistingPanel_AvailStock = new javax.swing.JTextField();
        txt_addExistingPanel_Price = new javax.swing.JTextField();
        btn_addExistingPanel_Add = new javax.swing.JButton();
        btn_addExistingPanel_Cancel = new javax.swing.JButton();
        lblAddStock = new javax.swing.JLabel();
        txt_addExistingPanel_AddStock = new javax.swing.JTextField();
        cmbExistingProducts = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itmLogout = new javax.swing.JMenuItem();
        itmExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        itmOrder = new javax.swing.JMenuItem();
        itmInv = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        mainMenu.setLayout(new java.awt.CardLayout());

        menuPanel.setBackground(new java.awt.Color(255, 255, 255));

        HEADER10.setBackground(new java.awt.Color(24, 53, 68));

        logo10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        lblUser.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 36)); // NOI18N
        lblUser.setForeground(new java.awt.Color(255, 255, 255));
        lblUser.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblUser.setText("ADMIN LOGGED IN");

        javax.swing.GroupLayout HEADER10Layout = new javax.swing.GroupLayout(HEADER10);
        HEADER10.setLayout(HEADER10Layout);
        HEADER10Layout.setHorizontalGroup(
            HEADER10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER10Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(logo10)
                .addGap(335, 335, 335)
                .addComponent(lblUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        HEADER10Layout.setVerticalGroup(
            HEADER10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER10Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(HEADER10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btn_menuPanel_Exit.setBackground(new java.awt.Color(255, 153, 51));
        btn_menuPanel_Exit.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 24)); // NOI18N
        btn_menuPanel_Exit.setForeground(new java.awt.Color(255, 255, 255));
        btn_menuPanel_Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Exit.png"))); // NOI18N
        btn_menuPanel_Exit.setMnemonic('x');
        btn_menuPanel_Exit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_menuPanel_Exit.setContentAreaFilled(false);
        btn_menuPanel_Exit.setOpaque(true);
        btn_menuPanel_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menuPanel_ExitActionPerformed(evt);
            }
        });

        btn_menuPanel_View.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 24)); // NOI18N
        btn_menuPanel_View.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ViewInventory.png"))); // NOI18N
        btn_menuPanel_View.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_menuPanel_View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menuPanel_ViewActionPerformed(evt);
            }
        });

        btn_menuPanel_New.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 24)); // NOI18N
        btn_menuPanel_New.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/CreateTransaction.png"))); // NOI18N
        btn_menuPanel_New.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_menuPanel_New.setBorderPainted(false);
        btn_menuPanel_New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menuPanel_NewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HEADER10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btn_menuPanel_New, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_menuPanel_View)
                .addGap(97, 97, 97)
                .addComponent(btn_menuPanel_Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addComponent(HEADER10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_menuPanel_View, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_menuPanel_Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_menuPanel_New, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(166, Short.MAX_VALUE))
        );

        mainMenu.add(menuPanel, "menuCard");

        transactionPanel.setBackground(new java.awt.Color(255, 255, 255));
        transactionPanel.setLayout(new java.awt.CardLayout());

        productPanel.setBackground(new java.awt.Color(255, 255, 255));
        productPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 36), new java.awt.Color(255, 153, 51))); // NOI18N

        lblSelect.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSelect.setText("Select a product: ");

        cmbProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductsActionPerformed(evt);
            }
        });

        lblPName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPName.setText("Product Name: ");

        txt_productPanel_Name.setEditable(false);
        txt_productPanel_Name.setBackground(new java.awt.Color(255, 255, 255));

        lblStock.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStock.setText("Available stock:");

        txt_productPanel_Quantity.setEditable(false);
        txt_productPanel_Quantity.setBackground(new java.awt.Color(255, 255, 255));

        lblPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPrice.setText("Price per unit: ");

        txt_productPanel_Price.setEditable(false);
        txt_productPanel_Price.setBackground(new java.awt.Color(255, 255, 255));

        btn_productPanel_Order.setBackground(new java.awt.Color(255, 255, 255));
        btn_productPanel_Order.setFont(new java.awt.Font("Aldo the Apache", 0, 18)); // NOI18N
        btn_productPanel_Order.setForeground(new java.awt.Color(255, 255, 255));
        btn_productPanel_Order.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/order.png"))); // NOI18N
        btn_productPanel_Order.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_productPanel_Order.setBorderPainted(false);
        btn_productPanel_Order.setContentAreaFilled(false);
        btn_productPanel_Order.setOpaque(true);
        btn_productPanel_Order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_productPanel_OrderActionPerformed(evt);
            }
        });

        HEADER1.setBackground(new java.awt.Color(24, 53, 68));

        logo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        javax.swing.GroupLayout HEADER1Layout = new javax.swing.GroupLayout(HEADER1);
        HEADER1.setLayout(HEADER1Layout);
        HEADER1Layout.setHorizontalGroup(
            HEADER1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(logo1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HEADER1Layout.setVerticalGroup(
            HEADER1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblTransNo.setText("Transaction No. ");

        btn_productPanel_Cancel.setBackground(new java.awt.Color(255, 255, 255));
        btn_productPanel_Cancel.setFont(new java.awt.Font("Aldo the Apache", 0, 18)); // NOI18N
        btn_productPanel_Cancel.setForeground(new java.awt.Color(255, 255, 255));
        btn_productPanel_Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel_transaction.png"))); // NOI18N
        btn_productPanel_Cancel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_productPanel_Cancel.setBorderPainted(false);
        btn_productPanel_Cancel.setContentAreaFilled(false);
        btn_productPanel_Cancel.setOpaque(true);
        btn_productPanel_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_productPanel_CancelActionPerformed(evt);
            }
        });

        jLabel4.setText("How many would you like to order?");

        btn_productPanel_Checkout.setBackground(new java.awt.Color(255, 255, 255));
        btn_productPanel_Checkout.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_productPanel_Checkout.setForeground(new java.awt.Color(255, 255, 255));
        btn_productPanel_Checkout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/proceed_to_checkout.png"))); // NOI18N
        btn_productPanel_Checkout.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_productPanel_Checkout.setBorderPainted(false);
        btn_productPanel_Checkout.setContentAreaFilled(false);
        btn_productPanel_Checkout.setOpaque(true);
        btn_productPanel_Checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_productPanel_CheckoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout productPanelLayout = new javax.swing.GroupLayout(productPanel);
        productPanel.setLayout(productPanelLayout);
        productPanelLayout.setHorizontalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HEADER1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(productPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTransNo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(productPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblSelect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPrice)
                    .addComponent(lblStock)
                    .addComponent(lblPName)
                    .addComponent(btn_productPanel_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(productPanelLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbProducts, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(productPanelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_productPanel_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txt_productPanel_OrderQuantity, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_productPanel_Quantity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                        .addComponent(txt_productPanel_Price, javax.swing.GroupLayout.Alignment.LEADING)))
                                .addGap(0, 321, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_productPanel_Checkout)
                            .addComponent(btn_productPanel_Order))
                        .addGap(22, 22, 22))))
        );
        productPanelLayout.setVerticalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelect)
                    .addComponent(cmbProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPName)
                    .addComponent(txt_productPanel_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStock)
                    .addComponent(txt_productPanel_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice)
                    .addComponent(txt_productPanel_Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_productPanel_OrderQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPanelLayout.createSequentialGroup()
                        .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_productPanel_Order, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_productPanel_Cancel))
                        .addGap(38, 38, 38)
                        .addComponent(lblTransNo))
                    .addComponent(btn_productPanel_Checkout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(HEADER1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        transactionPanel.add(productPanel, "productCard");

        reviewPanel.setBackground(new java.awt.Color(255, 255, 255));
        reviewPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        reviewPanel.setLayout(new java.awt.CardLayout());

        detailsPanel.setBackground(new java.awt.Color(255, 255, 255));
        detailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Review Order Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 36), new java.awt.Color(255, 153, 51))); // NOI18N

        txt_reviewPanel_Price.setEditable(false);
        txt_reviewPanel_Price.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txt_reviewPanel_Name.setEditable(false);
        txt_reviewPanel_Name.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txt_reviewPanel_OrderQuantity.setEditable(false);

        txt_reviewPanel_CurrentStock.setEditable(false);
        txt_reviewPanel_CurrentStock.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        lblHowManyOrders.setText("Order Quantity");

        btn_reviewPanel_CancelOrder.setBackground(new java.awt.Color(255, 255, 255));
        btn_reviewPanel_CancelOrder.setFont(new java.awt.Font("Aldo the Apache", 0, 18)); // NOI18N
        btn_reviewPanel_CancelOrder.setForeground(new java.awt.Color(255, 255, 255));
        btn_reviewPanel_CancelOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel_order.png"))); // NOI18N
        btn_reviewPanel_CancelOrder.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_reviewPanel_CancelOrder.setContentAreaFilled(false);
        btn_reviewPanel_CancelOrder.setOpaque(true);
        btn_reviewPanel_CancelOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reviewPanel_CancelOrderActionPerformed(evt);
            }
        });

        btn_reviewPanel_AddToCart.setBackground(new java.awt.Color(255, 255, 255));
        btn_reviewPanel_AddToCart.setFont(new java.awt.Font("Aldo the Apache", 0, 18)); // NOI18N
        btn_reviewPanel_AddToCart.setForeground(new java.awt.Color(255, 255, 255));
        btn_reviewPanel_AddToCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_to_cart.png"))); // NOI18N
        btn_reviewPanel_AddToCart.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_reviewPanel_AddToCart.setContentAreaFilled(false);
        btn_reviewPanel_AddToCart.setOpaque(true);
        btn_reviewPanel_AddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reviewPanel_AddToCartActionPerformed(evt);
            }
        });

        lblPName1.setText("Product Name: ");

        lblOrderedPrice.setText("Price per unit: ");

        lblCurrStock.setText("Current stock available: ");

        HEADER2.setBackground(new java.awt.Color(24, 53, 68));

        logo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        javax.swing.GroupLayout HEADER2Layout = new javax.swing.GroupLayout(HEADER2);
        HEADER2.setLayout(HEADER2Layout);
        HEADER2Layout.setHorizontalGroup(
            HEADER2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(logo2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HEADER2Layout.setVerticalGroup(
            HEADER2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HEADER2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logo2)
                .addContainerGap())
        );

        lblTransNo1.setText("Transaction No. ");

        btn_reviewPanel_ResumeShopping.setBackground(new java.awt.Color(255, 255, 255));
        btn_reviewPanel_ResumeShopping.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_reviewPanel_ResumeShopping.setForeground(new java.awt.Color(255, 255, 255));
        btn_reviewPanel_ResumeShopping.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/continue_shopping.png"))); // NOI18N
        btn_reviewPanel_ResumeShopping.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_reviewPanel_ResumeShopping.setContentAreaFilled(false);
        btn_reviewPanel_ResumeShopping.setOpaque(true);
        btn_reviewPanel_ResumeShopping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reviewPanel_ResumeShoppingActionPerformed(evt);
            }
        });

        btn_reviewPanel_Checkout.setBackground(new java.awt.Color(255, 255, 255));
        btn_reviewPanel_Checkout.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_reviewPanel_Checkout.setForeground(new java.awt.Color(255, 255, 255));
        btn_reviewPanel_Checkout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/proceed_to_checkout.png"))); // NOI18N
        btn_reviewPanel_Checkout.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_reviewPanel_Checkout.setContentAreaFilled(false);
        btn_reviewPanel_Checkout.setOpaque(true);
        btn_reviewPanel_Checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reviewPanel_CheckoutActionPerformed(evt);
            }
        });

        btn_reviewPanel_Cancel.setBackground(new java.awt.Color(255, 255, 255));
        btn_reviewPanel_Cancel.setFont(new java.awt.Font("Aldo the Apache", 0, 18)); // NOI18N
        btn_reviewPanel_Cancel.setForeground(new java.awt.Color(255, 255, 255));
        btn_reviewPanel_Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel_transaction.png"))); // NOI18N
        btn_reviewPanel_Cancel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_reviewPanel_Cancel.setContentAreaFilled(false);
        btn_reviewPanel_Cancel.setOpaque(true);
        btn_reviewPanel_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reviewPanel_CancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HEADER2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                        .addComponent(lblHowManyOrders)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_reviewPanel_OrderQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_reviewPanel_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTransNo1))
                        .addGap(18, 18, 18)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addComponent(btn_reviewPanel_CancelOrder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 356, Short.MAX_VALUE)
                                .addComponent(btn_reviewPanel_AddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btn_reviewPanel_ResumeShopping)
                                .addGap(18, 18, 18)
                                .addComponent(btn_reviewPanel_Checkout)))
                        .addGap(10, 10, 10)))
                .addContainerGap())
            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblCurrStock)
                        .addComponent(lblOrderedPrice)
                        .addComponent(lblPName1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(228, 228, 228)
                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt_reviewPanel_Name)
                        .addComponent(txt_reviewPanel_CurrentStock, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                        .addComponent(txt_reviewPanel_Price))
                    .addContainerGap()))
        );
        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_reviewPanel_OrderQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHowManyOrders))
                .addGap(18, 18, 18)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btn_reviewPanel_CancelOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_reviewPanel_AddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_reviewPanel_Cancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                        .addComponent(lblTransNo1)
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_reviewPanel_ResumeShopping, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_reviewPanel_Checkout, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)))
                .addComponent(HEADER2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPName1)
                        .addComponent(txt_reviewPanel_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCurrStock)
                        .addComponent(txt_reviewPanel_CurrentStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_reviewPanel_Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblOrderedPrice))
                    .addContainerGap(445, Short.MAX_VALUE)))
        );

        reviewPanel.add(detailsPanel, "details");

        transactionPanel.add(reviewPanel, "orderCard");

        cartPanel.setBackground(new java.awt.Color(255, 255, 255));
        cartPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Your Shopping Cart", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 36), new java.awt.Color(255, 153, 51))); // NOI18N

        btn_cartPanel_AddMore.setBackground(new java.awt.Color(255, 255, 255));
        btn_cartPanel_AddMore.setFont(new java.awt.Font("Aldo the Apache", 0, 18)); // NOI18N
        btn_cartPanel_AddMore.setForeground(new java.awt.Color(255, 255, 255));
        btn_cartPanel_AddMore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_more.png"))); // NOI18N
        btn_cartPanel_AddMore.setMnemonic('a');
        btn_cartPanel_AddMore.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_cartPanel_AddMore.setContentAreaFilled(false);
        btn_cartPanel_AddMore.setOpaque(true);
        btn_cartPanel_AddMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cartPanel_AddMoreActionPerformed(evt);
            }
        });

        btn_cartPanel_Remove.setBackground(new java.awt.Color(255, 255, 255));
        btn_cartPanel_Remove.setForeground(new java.awt.Color(255, 255, 255));
        btn_cartPanel_Remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/remove_from_cart.png"))); // NOI18N
        btn_cartPanel_Remove.setMnemonic('r');
        btn_cartPanel_Remove.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_cartPanel_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cartPanel_RemoveActionPerformed(evt);
            }
        });

        btn_cartPanel_Cancel.setBackground(new java.awt.Color(255, 255, 255));
        btn_cartPanel_Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel_transaction.png"))); // NOI18N
        btn_cartPanel_Cancel.setMnemonic('c');
        btn_cartPanel_Cancel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_cartPanel_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cartPanel_CancelActionPerformed(evt);
            }
        });

        tbl_YourCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Price", "Quantity", "Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        tbl_YourCart.setFocusable(false);
        jScrollPane3.setViewportView(tbl_YourCart);
        if (tbl_YourCart.getColumnModel().getColumnCount() > 0) {
            tbl_YourCart.getColumnModel().getColumn(0).setResizable(false);
            tbl_YourCart.getColumnModel().getColumn(0).setHeaderValue("Product Name");
            tbl_YourCart.getColumnModel().getColumn(1).setResizable(false);
            tbl_YourCart.getColumnModel().getColumn(1).setHeaderValue("Price");
            tbl_YourCart.getColumnModel().getColumn(2).setResizable(false);
            tbl_YourCart.getColumnModel().getColumn(2).setHeaderValue("Quantity");
            tbl_YourCart.getColumnModel().getColumn(3).setResizable(false);
            tbl_YourCart.getColumnModel().getColumn(3).setHeaderValue("Total Price");
        }

        btn_cartPanel_Transact.setBackground(new java.awt.Color(255, 255, 255));
        btn_cartPanel_Transact.setFont(new java.awt.Font("Rockwell Condensed", 0, 18)); // NOI18N
        btn_cartPanel_Transact.setForeground(new java.awt.Color(255, 255, 255));
        btn_cartPanel_Transact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/transact.png"))); // NOI18N
        btn_cartPanel_Transact.setMnemonic('t');
        btn_cartPanel_Transact.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_cartPanel_Transact.setContentAreaFilled(false);
        btn_cartPanel_Transact.setOpaque(true);
        btn_cartPanel_Transact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cartPanel_TransactActionPerformed(evt);
            }
        });

        jLabel2.setText("Cash: ");

        HEADER7.setBackground(new java.awt.Color(24, 53, 68));

        logo7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        javax.swing.GroupLayout HEADER7Layout = new javax.swing.GroupLayout(HEADER7);
        HEADER7.setLayout(HEADER7Layout);
        HEADER7Layout.setHorizontalGroup(
            HEADER7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER7Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(logo7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HEADER7Layout.setVerticalGroup(
            HEADER7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblTransNo3.setText("Transaction No. ");

        lblTotalPriceWithVat.setText("Total Price (VAT inclusive)");

        txt_cartPanel_TotalPrice.setEditable(false);
        txt_cartPanel_TotalPrice.setText("₱");

        btn_cartPanel_Edit.setBackground(new java.awt.Color(255, 255, 255));
        btn_cartPanel_Edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit_order_quantity.png"))); // NOI18N
        btn_cartPanel_Edit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_cartPanel_Edit.setBorderPainted(false);
        btn_cartPanel_Edit.setFocusPainted(false);
        btn_cartPanel_Edit.setOpaque(false);
        btn_cartPanel_Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cartPanel_EditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cartPanelLayout = new javax.swing.GroupLayout(cartPanel);
        cartPanel.setLayout(cartPanelLayout);
        cartPanelLayout.setHorizontalGroup(
            cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HEADER7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(cartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 913, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cartPanelLayout.createSequentialGroup()
                        .addComponent(btn_cartPanel_Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_cartPanel_Remove)
                        .addGap(27, 27, 27)
                        .addComponent(btn_cartPanel_Cancel))
                    .addGroup(cartPanelLayout.createSequentialGroup()
                        .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTransNo3)
                            .addComponent(btn_cartPanel_AddMore, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_cartPanel_Transact, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cartPanelLayout.createSequentialGroup()
                                .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTotalPriceWithVat)
                                    .addComponent(jLabel2))
                                .addGap(53, 53, 53)
                                .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_cartPanel_Cash, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                                    .addComponent(txt_cartPanel_TotalPrice))))))
                .addContainerGap())
        );
        cartPanelLayout.setVerticalGroup(
            cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_cartPanel_Remove)
                    .addComponent(btn_cartPanel_Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cartPanel_Cancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cartPanelLayout.createSequentialGroup()
                        .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotalPriceWithVat)
                            .addComponent(txt_cartPanel_TotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_cartPanel_Cash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addComponent(btn_cartPanel_Transact))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cartPanelLayout.createSequentialGroup()
                        .addComponent(btn_cartPanel_AddMore, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblTransNo3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HEADER7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        transactionPanel.add(cartPanel, "cartCard");

        summaryPanel.setBackground(new java.awt.Color(255, 255, 255));
        summaryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Order Summary", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 36), new java.awt.Color(255, 153, 51))); // NOI18N

        lblItemCount.setText("Item count: ");

        lblSubtotal.setText("SUBTOTAL: ");

        lblVAT.setText("VAT: ");

        lblTotal.setText("TOTAL: ");

        lblPaidAmount.setText("Paid amount: ");

        txt_summaryPanel_PaidAmount.setEditable(false);
        txt_summaryPanel_PaidAmount.setBackground(new java.awt.Color(255, 255, 255));
        txt_summaryPanel_PaidAmount.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_summaryPanel_PaidAmount.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txt_summaryPanel_Total.setEditable(false);
        txt_summaryPanel_Total.setBackground(new java.awt.Color(255, 255, 255));
        txt_summaryPanel_Total.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_summaryPanel_Total.setBorder(null);

        txt_summaryPanel_VAT.setEditable(false);
        txt_summaryPanel_VAT.setBackground(new java.awt.Color(255, 255, 255));
        txt_summaryPanel_VAT.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_summaryPanel_VAT.setBorder(null);

        txt_summaryPanel_Subtotal.setEditable(false);
        txt_summaryPanel_Subtotal.setBackground(new java.awt.Color(255, 255, 255));
        txt_summaryPanel_Subtotal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_summaryPanel_Subtotal.setBorder(null);

        txt_summaryPanel_ItemCount.setEditable(false);
        txt_summaryPanel_ItemCount.setBackground(new java.awt.Color(255, 255, 255));
        txt_summaryPanel_ItemCount.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_summaryPanel_ItemCount.setBorder(null);

        lblChange.setText("Change: ");

        txt_summaryPanel_Change.setEditable(false);
        txt_summaryPanel_Change.setBackground(new java.awt.Color(255, 255, 255));
        txt_summaryPanel_Change.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_summaryPanel_Change.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        tbl_Receipt.setAutoCreateRowSorter(true);
        tbl_Receipt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_Receipt.setFocusable(false);
        tbl_Receipt.setRowSelectionAllowed(false);
        tbl_Receipt.setShowHorizontalLines(false);
        tbl_Receipt.setShowVerticalLines(false);
        jScrollPane2.setViewportView(tbl_Receipt);

        HEADER9.setBackground(new java.awt.Color(24, 53, 68));

        logo9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Thank you for shopping with us!");

        javax.swing.GroupLayout HEADER9Layout = new javax.swing.GroupLayout(HEADER9);
        HEADER9.setLayout(HEADER9Layout);
        HEADER9Layout.setHorizontalGroup(
            HEADER9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo9)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                .addGap(67, 67, 67))
        );
        HEADER9Layout.setVerticalGroup(
            HEADER9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HEADER9Layout.createSequentialGroup()
                .addComponent(logo9)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(HEADER9Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_summaryPanel_MainMenu.setBackground(new java.awt.Color(255, 153, 0));
        btn_summaryPanel_MainMenu.setFont(new java.awt.Font("Aldo the Apache", 0, 18)); // NOI18N
        btn_summaryPanel_MainMenu.setForeground(new java.awt.Color(255, 255, 255));
        btn_summaryPanel_MainMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/main_menu.png"))); // NOI18N
        btn_summaryPanel_MainMenu.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_summaryPanel_MainMenu.setBorderPainted(false);
        btn_summaryPanel_MainMenu.setContentAreaFilled(false);
        btn_summaryPanel_MainMenu.setOpaque(true);
        btn_summaryPanel_MainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_summaryPanel_MainMenuActionPerformed(evt);
            }
        });

        lblTransNo4.setText("Transaction No. ");

        javax.swing.GroupLayout summaryPanelLayout = new javax.swing.GroupLayout(summaryPanel);
        summaryPanel.setLayout(summaryPanelLayout);
        summaryPanelLayout.setHorizontalGroup(
            summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(summaryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(summaryPanelLayout.createSequentialGroup()
                        .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPaidAmount)
                            .addComponent(lblChange)
                            .addComponent(lblTransNo4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_summaryPanel_Change, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_summaryPanel_PaidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65)
                        .addComponent(btn_summaryPanel_MainMenu)
                        .addGap(53, 53, 53))
                    .addGroup(summaryPanelLayout.createSequentialGroup()
                        .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotal)
                            .addComponent(lblVAT)
                            .addComponent(lblSubtotal)
                            .addComponent(lblItemCount))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_summaryPanel_ItemCount)
                            .addComponent(txt_summaryPanel_Total)
                            .addComponent(txt_summaryPanel_VAT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(txt_summaryPanel_Subtotal, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(20, 20, 20))
            .addComponent(HEADER9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        summaryPanelLayout.setVerticalGroup(
            summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, summaryPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblItemCount)
                    .addComponent(txt_summaryPanel_ItemCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSubtotal)
                    .addComponent(txt_summaryPanel_Subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVAT)
                    .addComponent(txt_summaryPanel_VAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal)
                    .addComponent(txt_summaryPanel_Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(summaryPanelLayout.createSequentialGroup()
                        .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPaidAmount)
                            .addComponent(txt_summaryPanel_PaidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(summaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_summaryPanel_Change, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblChange))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTransNo4))
                    .addComponent(btn_summaryPanel_MainMenu))
                .addGap(29, 29, 29)
                .addComponent(HEADER9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        transactionPanel.add(summaryPanel, "summaryCard");

        mainMenu.add(transactionPanel, "orderCard");

        inventoryPanel.setLayout(new java.awt.CardLayout());

        viewInventoryPanel.setBackground(new java.awt.Color(255, 255, 255));

        tbl_Inventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_Inventory.setFocusable(false);
        jScrollPane1.setViewportView(tbl_Inventory);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Inventory");

        HEADER.setBackground(new java.awt.Color(24, 53, 68));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        javax.swing.GroupLayout HEADERLayout = new javax.swing.GroupLayout(HEADER);
        HEADER.setLayout(HEADERLayout);
        HEADERLayout.setHorizontalGroup(
            HEADERLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADERLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(logo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HEADERLayout.setVerticalGroup(
            HEADERLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADERLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_inventoryPanel_Add.setBackground(new java.awt.Color(255, 255, 255));
        btn_inventoryPanel_Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_item.png"))); // NOI18N
        btn_inventoryPanel_Add.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_inventoryPanel_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inventoryPanel_AddActionPerformed(evt);
            }
        });

        btn_inventoryPanel_Update.setBackground(new java.awt.Color(255, 255, 255));
        btn_inventoryPanel_Update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update_price.png"))); // NOI18N
        btn_inventoryPanel_Update.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_inventoryPanel_Update.setBorderPainted(false);
        btn_inventoryPanel_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inventoryPanel_UpdateActionPerformed(evt);
            }
        });

        btn_inventoryPanel_MainMenu.setBackground(new java.awt.Color(255, 255, 255));
        btn_inventoryPanel_MainMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/main_menu.png"))); // NOI18N
        btn_inventoryPanel_MainMenu.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_inventoryPanel_MainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inventoryPanel_MainMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewInventoryPanelLayout = new javax.swing.GroupLayout(viewInventoryPanel);
        viewInventoryPanel.setLayout(viewInventoryPanelLayout);
        viewInventoryPanelLayout.setHorizontalGroup(
            viewInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HEADER, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(viewInventoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 925, Short.MAX_VALUE)
                    .addGroup(viewInventoryPanelLayout.createSequentialGroup()
                        .addComponent(btn_inventoryPanel_MainMenu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_inventoryPanel_Add)
                        .addGap(41, 41, 41)
                        .addComponent(btn_inventoryPanel_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(viewInventoryPanelLayout.createSequentialGroup()
                .addGap(304, 304, 304)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        viewInventoryPanelLayout.setVerticalGroup(
            viewInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewInventoryPanelLayout.createSequentialGroup()
                .addComponent(HEADER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(viewInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_inventoryPanel_MainMenu, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(viewInventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_inventoryPanel_Add)
                        .addComponent(btn_inventoryPanel_Update)))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        inventoryPanel.add(viewInventoryPanel, "view");

        addNewPanel.setBackground(new java.awt.Color(255, 255, 255));

        HEADER3.setBackground(new java.awt.Color(24, 53, 68));

        logo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        javax.swing.GroupLayout HEADER3Layout = new javax.swing.GroupLayout(HEADER3);
        HEADER3.setLayout(HEADER3Layout);
        HEADER3Layout.setHorizontalGroup(
            HEADER3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo3)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        HEADER3Layout.setVerticalGroup(
            HEADER3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblAdditem.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblAdditem.setForeground(new java.awt.Color(255, 153, 51));
        lblAdditem.setText("Add Item to Inventory");

        lblProductName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProductName.setText("Product Name: ");

        lblAvailableStock.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAvailableStock.setText("Available stock: ");

        lblPriceInv.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPriceInv.setText("Price: ");

        btn_addItemPanel_Add.setBackground(new java.awt.Color(255, 255, 255));
        btn_addItemPanel_Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_item.png"))); // NOI18N
        btn_addItemPanel_Add.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_addItemPanel_Add.setBorderPainted(false);
        btn_addItemPanel_Add.setOpaque(false);
        btn_addItemPanel_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addItemPanel_AddActionPerformed(evt);
            }
        });

        btn_addItemPanel_Cancel.setBackground(new java.awt.Color(255, 255, 255));
        btn_addItemPanel_Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btn_addItemPanel_Cancel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_addItemPanel_Cancel.setBorderPainted(false);
        btn_addItemPanel_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addItemPanel_CancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addNewPanelLayout = new javax.swing.GroupLayout(addNewPanel);
        addNewPanel.setLayout(addNewPanelLayout);
        addNewPanelLayout.setHorizontalGroup(
            addNewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addNewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addNewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAdditem)
                    .addGroup(addNewPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btn_addItemPanel_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_addItemPanel_Cancel))
                    .addGroup(addNewPanelLayout.createSequentialGroup()
                        .addComponent(lblPriceInv)
                        .addGap(289, 289, 289)
                        .addComponent(txt_addItemPanel_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addNewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addNewPanelLayout.createSequentialGroup()
                            .addComponent(lblAvailableStock)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_addItemPanel_AvailStock, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addNewPanelLayout.createSequentialGroup()
                            .addComponent(lblProductName)
                            .addGap(209, 209, 209)
                            .addComponent(txt_addItemPanel_ProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(HEADER3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addNewPanelLayout.setVerticalGroup(
            addNewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HEADER3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(addNewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAdditem, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(addNewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductName)
                    .addComponent(txt_addItemPanel_ProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(addNewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvailableStock)
                    .addComponent(txt_addItemPanel_AvailStock, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(addNewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_addItemPanel_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPriceInv))
                .addGap(100, 100, 100)
                .addGroup(addNewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_addItemPanel_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_addItemPanel_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(140, 140, 140))
        );

        inventoryPanel.add(addNewPanel, "add");

        addExistingPanel.setBackground(new java.awt.Color(255, 255, 255));

        HEADER4.setBackground(new java.awt.Color(24, 53, 68));

        logo4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        javax.swing.GroupLayout HEADER4Layout = new javax.swing.GroupLayout(HEADER4);
        HEADER4.setLayout(HEADER4Layout);
        HEADER4Layout.setHorizontalGroup(
            HEADER4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo4)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        HEADER4Layout.setVerticalGroup(
            HEADER4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HEADER4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblAdditem1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblAdditem1.setForeground(new java.awt.Color(255, 153, 51));
        lblAdditem1.setText("Add Item to Inventory");

        lblProductName1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblProductName1.setText("Product Name: ");

        lblAvailableStock1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAvailableStock1.setText("Available stock: ");

        lblPriceInv1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPriceInv1.setText("Price: ");

        txt_addExistingPanel_AvailStock.setEditable(false);

        txt_addExistingPanel_Price.setEditable(false);

        btn_addExistingPanel_Add.setBackground(new java.awt.Color(255, 255, 255));
        btn_addExistingPanel_Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_item.png"))); // NOI18N
        btn_addExistingPanel_Add.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_addExistingPanel_Add.setBorderPainted(false);
        btn_addExistingPanel_Add.setOpaque(false);
        btn_addExistingPanel_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addExistingPanel_AddActionPerformed(evt);
            }
        });

        btn_addExistingPanel_Cancel.setBackground(new java.awt.Color(255, 255, 255));
        btn_addExistingPanel_Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.png"))); // NOI18N
        btn_addExistingPanel_Cancel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_addExistingPanel_Cancel.setBorderPainted(false);
        btn_addExistingPanel_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addExistingPanel_CancelActionPerformed(evt);
            }
        });

        lblAddStock.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAddStock.setText("Add Stock: ");

        cmbExistingProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbExistingProductsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addExistingPanelLayout = new javax.swing.GroupLayout(addExistingPanel);
        addExistingPanel.setLayout(addExistingPanelLayout);
        addExistingPanelLayout.setHorizontalGroup(
            addExistingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addExistingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addExistingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAdditem1)
                    .addGroup(addExistingPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btn_addExistingPanel_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_addExistingPanel_Cancel))
                    .addGroup(addExistingPanelLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(lblAddStock)
                        .addGap(107, 107, 107)
                        .addComponent(txt_addExistingPanel_AddStock, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addExistingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addExistingPanelLayout.createSequentialGroup()
                            .addComponent(lblPriceInv1)
                            .addGap(289, 289, 289)
                            .addComponent(txt_addExistingPanel_Price, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addExistingPanelLayout.createSequentialGroup()
                            .addComponent(lblAvailableStock1)
                            .addGap(202, 202, 202)
                            .addComponent(txt_addExistingPanel_AvailStock))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addExistingPanelLayout.createSequentialGroup()
                            .addComponent(lblProductName1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbExistingProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(HEADER4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addExistingPanelLayout.setVerticalGroup(
            addExistingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HEADER4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(addExistingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAdditem1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(addExistingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductName1)
                    .addComponent(cmbExistingProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(addExistingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvailableStock1)
                    .addComponent(txt_addExistingPanel_AvailStock, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addExistingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_addExistingPanel_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPriceInv1))
                .addGap(50, 50, 50)
                .addGroup(addExistingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_addExistingPanel_AddStock, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(lblAddStock))
                .addGap(66, 66, 66)
                .addGroup(addExistingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_addExistingPanel_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_addExistingPanel_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(140, 140, 140))
        );

        inventoryPanel.add(addExistingPanel, "existing");

        mainMenu.add(inventoryPanel, "invCard");

        getContentPane().add(mainMenu, "mainMenu");

        jMenu1.setText("File");

        itmLogout.setText("Logout");
        itmLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmLogoutActionPerformed(evt);
            }
        });
        jMenu1.add(itmLogout);

        itmExit.setText("Exit");
        itmExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmExitActionPerformed(evt);
            }
        });
        jMenu1.add(itmExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("View");

        itmOrder.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.ALT_MASK));
        itmOrder.setText("My Orders");
        itmOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmOrderActionPerformed(evt);
            }
        });
        jMenu2.add(itmOrder);

        itmInv.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK));
        itmInv.setText("Inventory");
        itmInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmInvActionPerformed(evt);
            }
        });
        jMenu2.add(itmInv);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setTransactionNumber() {
        /* SET TRANSACTION NUMBER BASED ON LAST TRANSACTION FOUND IN AUDIT TRAIL */
        String toSearch = fh.readAuditTrail();
        String regEx = "\\#[0-9]{3,4}";

        Pattern pattern = Pattern.compile(regEx);
        Matcher matcher = pattern.matcher(toSearch);
        String found = "";
        while (matcher.find()) {
            if (matcher.group().length() != 0) {
                found = matcher.group().trim();
            }
        }
        if ("".equals(found)) {
            trans.transNumber = 1;
        } else {
            int number = Integer.parseInt(found.substring(1, found.length()));
            trans.transNumber = ++number;
        }
    }

    public String getTimeStamp() {
        String timeStamp = new SimpleDateFormat("yyyyMMddHHmss").format(new Date());
        return timeStamp;
    }

    private void refreshOrderList(Transaction trans) {
        /* Populate order list from table data */
        trans.setSubtotal(0);           //resets all transaction values first
        trans.setVATvalue(0);           //because everytime there is a change on the table
        trans.setTotalPriceWithVat(0);  //this method is called
        trans.resetOrderList();

        /*if (tbl_YourCart.getRowCount() > 0) {
         btn_reviewPanel_ResumeShopping.setVisible(false);
         btn_reviewPanel_Checkout.setVisible(false);
         }*/
        for (int i = 0; i < tbl_YourCart.getRowCount(); i++) {               //iterate over table and get data per row
            String name = tbl_YourCart.getValueAt(i, 0).toString();
            double price = (Double) tbl_YourCart.getValueAt(i, 1);
            int quantity = (Integer) tbl_YourCart.getValueAt(i, 2);
            double totalPrice = (Double) tbl_YourCart.getValueAt(i, 3);
            trans.addToOrderList(name, price, quantity, totalPrice);        //add row data to order list
        }
        trans.compute();                                 //compute transactions based on ORDER LIST
        txt_cartPanel_TotalPrice.setText(String.format("₱%.2f", trans.getTotalPrice()));
    }

    private void cmbProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductsActionPerformed
        /* Refresh textfields based on the current selected item on combobox */
        for (int i = 0; i < prod.productList.size(); i++) {
            if (cmbProducts.getSelectedItem() == prod.productList.get(i).getProductName()) {
                txt_productPanel_Name.setText(prod.productList.get(i).getProductName());
                txt_productPanel_Price.setText("P" + prod.productList.get(i).getProductPrice());
                int avail = prod.productList.get(i).getProductAvail();
                txt_productPanel_Quantity.setText("" + avail);
                break;
            }
        }
    }//GEN-LAST:event_cmbProductsActionPerformed

    private void btn_productPanel_OrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_productPanel_OrderActionPerformed
        /* 
         Order button on Product Details panel
         Checks order if valid first, then calls the second panel
         */
        if (Integer.parseInt(txt_productPanel_Quantity.getText()) > 0) {
            boolean inputAccepted = false;
            int quantity = 0;
            OUTER:
            while (!inputAccepted) {
                String answer = txt_productPanel_OrderQuantity.getText(); //orderSpinner.getValue().toString();
                if (answer == null) {
                    break;
                } else if (answer.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "No order.");
                    break;
                } else {
                    try {
                        quantity = Integer.parseInt(answer);
                        if (quantity > Integer.parseInt(txt_productPanel_Quantity.getText())) {
                            JOptionPane.showMessageDialog(this, "Insufficient stock.");      //prevents user from ordering more than the current stock
                            break;
                        } else if (quantity < 0) {
                            JOptionPane.showMessageDialog(this, "Invalid input. Order cannot be negative.");
                            break;
                        } else if (quantity == 0) {
                            JOptionPane.showMessageDialog(this, "No order!");
                            break;
                        } else {
                            orderData = (DefaultTableModel) tbl_YourCart.getModel();
                            if (orderData.getRowCount() > 0) {
                                btn_reviewPanel_Checkout.setVisible(true);
                                btn_productPanel_Checkout.setVisible(true);
                            } else {
                                btn_reviewPanel_Checkout.setVisible(false);
                                btn_productPanel_Checkout.setVisible(false);
                            }
                            txt_reviewPanel_OrderQuantity.setText(String.valueOf(quantity));
                            txt_reviewPanel_Name.setText(txt_productPanel_Name.getText());
                            txt_reviewPanel_CurrentStock.setText(txt_productPanel_Quantity.getText());
                            txt_reviewPanel_Price.setText(txt_productPanel_Price.getText());
                            inputAccepted = true;

                            btn_reviewPanel_CancelOrder.setVisible(true);
                            btn_reviewPanel_ResumeShopping.setVisible(false);

                            fh.writeAuditTrail("The item: " + txt_reviewPanel_Name.getText() + " count: " + txt_reviewPanel_OrderQuantity.getText() + " selected and reviewed. " + getTimeStamp());

                            CardLayout card = (CardLayout) transactionPanel.getLayout();
                            card.show(transactionPanel, "orderCard");
                            card = (CardLayout) reviewPanel.getLayout();
                            card.show(reviewPanel, "details");
                        }
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "Invalid input! (Input: not a number)");
                        break;
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Item out of stock.");
        }
    }//GEN-LAST:event_btn_productPanel_OrderActionPerformed

    private void btn_cartPanel_TransactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cartPanel_TransactActionPerformed
        /* Transact button on Cart Panel */
        if (orderData.getRowCount() > 0) {      //checks if cart has data on it
            double paidAmount;
            try {
                paidAmount = Double.parseDouble(txt_cartPanel_Cash.getText());

                if (paidAmount < trans.getTotalPrice()) {
                    JOptionPane.showMessageDialog(this, "Insufficient Money!", "Add more cash", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    //if sufficient cash is provided, transaction will proceed as following:
                    int itemCount = trans.getOrderList().size();
                    double subtotal = trans.getSubtotal();
                    double vatValue = trans.getVATvalue();
                    double total = trans.getTotalPrice();
                    trans.setAmountPaid(paidAmount);
                    double change = paidAmount - total;
                    trans.setChange(change);

                    txt_summaryPanel_ItemCount.setText(String.valueOf(itemCount));
                    txt_summaryPanel_Subtotal.setText("₱" + String.format("%.2f", subtotal));
                    txt_summaryPanel_VAT.setText("₱" + String.format("%.2f", vatValue));
                    txt_summaryPanel_Total.setText("₱" + String.format("%.2f", total));
                    txt_summaryPanel_Change.setText(String.format("₱%.2f", change));
                    txt_summaryPanel_PaidAmount.setText("₱" + String.format("%.2f", paidAmount));

                    CardLayout card = (CardLayout) transactionPanel.getLayout();
                    card.show(transactionPanel, "summaryCard");
                    writeSoldItems();
                    fh.writeReceipt(trans, paidAmount, change); //then writes the receipt based on last transaction
                    endCurrentTransaction();                //after transaction is complete, terminates current transaction
                    tbl_Receipt.setModel(orderData);
                    fh.updateCSV(prod.productList);         //updates csv file
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid/No Input");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Cart is empty!");
        }
    }//GEN-LAST:event_btn_cartPanel_TransactActionPerformed

    private void writeSoldItems() {
        for (model.Order item : trans.getOrderList()) {
            String name = item.getName();
            int count = item.getQuantity();
            fh.writeInventoryLog("Item: " + name + " count: " + count + " removed and sold. " + getTimeStamp());
        }
    }

    private void refreshProductList() {
        boolean fileFound = false;
        File file = new File("./resources/database/Products.csv");
        while (!fileFound) {
            try {
                prod.emptyProductList();
                prod = fh.readFile(file);
                fileFound = true;

                dtm.setColumnIdentifiers(prod.heading);
                dtm.setRowCount(0);
                tbl_Inventory.setModel(dtm);

                for (int i = 0; i < prod.productList.size(); i++) {
                    String name = prod.productList.get(i).getProductName();
                    double price = prod.productList.get(i).getProductPrice();
                    int stock = prod.productList.get(i).getProductAvail();

                    cmbProducts.addItem(name);
                    cmbExistingProducts.addItem(name);
                    Object data[] = {name, price, stock};

                    dtm.addRow(data);
                }
            } catch (FileNotFoundException backup) {
                file = new File("./backup/Products.csv");
                try {
                    prod = fh.readFile(file);
                    fh.updateCSV(prod.productList);
                    prod.emptyProductList();
                } catch (FileNotFoundException again) {
                    JOptionPane.showMessageDialog(this, "File not found.", "Try again", JOptionPane.ERROR_MESSAGE);
                    JFileChooser fc = new JFileChooser();
                    fc.setCurrentDirectory(new File("."));
                    fc.setDialogTitle("Locate Products.csv");
                    FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV", "csv");
                    fc.setFileFilter(filter);
                    if (fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
                        file = fc.getSelectedFile();
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }

    private void endCurrentTransaction() {
        btn_reviewPanel_ResumeShopping.setVisible(false);
        btn_reviewPanel_Checkout.setVisible(false);
        txt_productPanel_OrderQuantity.setText("");

        fh.writeAuditTrail("Items Finalized Transaction #" + String.format("%04d", trans.transNumber) + ". " + getTimeStamp());
        fh.writeAuditTrail("Items total amount: " + String.format("%.2f %s", trans.getTotalPrice(), getTimeStamp()));
        fh.writeAuditTrail("Amount paid: " + String.format("%.2f %s", trans.getAmountPaid(), getTimeStamp()));
        fh.writeAuditTrail("Change: " + String.format("%.2f %s", trans.getChange(), getTimeStamp()));
        fh.writeAuditTrail("End Transaction #" + String.format("%04d", trans.transNumber) + ". " + getTimeStamp());
        fh.writeAuditTrail("");
        trans.started = false;
        trans.complete = true;
        trans.transNumber++;
    }

    private void cancelTransaction() {
        trans.started = false;

        CardLayout card = (CardLayout) mainMenu.getLayout();
        card.show(mainMenu, "menuCard");
        orderData = (DefaultTableModel) tbl_YourCart.getModel();
        if (orderData.getRowCount() > 0) {
            orderData.setRowCount(0);
        }

        btn_reviewPanel_ResumeShopping.setVisible(false);
        btn_reviewPanel_Checkout.setVisible(false);
        txt_productPanel_OrderQuantity.setText("");

        fh.writeAuditTrail("User cancelled transaction. #" + String.format("%04d", trans.transNumber) + ". " + getTimeStamp());
        fh.writeAuditTrail("End Transaction #" + String.format("%04d", trans.transNumber) + ". " + getTimeStamp());
        fh.writeAuditTrail("");
        trans.transNumber++;
    }

    private void btn_reviewPanel_AddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reviewPanel_AddToCartActionPerformed
        addOrder();
        btn_reviewPanel_Checkout.setVisible(true);
        btn_reviewPanel_ResumeShopping.setVisible(true);
        btn_reviewPanel_CancelOrder.setVisible(false);
    }//GEN-LAST:event_btn_reviewPanel_AddToCartActionPerformed

    private void addOrder() {
        /* called when add to cart is clicked
         adds the current order to the cart */
        orderData = (DefaultTableModel) tbl_YourCart.getModel();

        tbl_YourCart.setModel(orderData);

        if (Integer.parseInt(txt_productPanel_Quantity.getText()) > 0) {
            String pName = txt_reviewPanel_Name.getText();
            double price = Double.parseDouble(txt_reviewPanel_Price.getText().substring(1, txt_productPanel_Price.getText().length()));
            int quantity = 0;
            try {
                quantity = Integer.parseInt(txt_reviewPanel_OrderQuantity.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid input! Not a number.");
            }
            double totalPrice = price * quantity;
            Object data[] = {pName, price, quantity, totalPrice};

            String id = null;
            int listedQuantity = 0;
            int i = 0;
            if (!isEmpty(tbl_YourCart)) {
                for (i = 0; i < tbl_YourCart.getRowCount(); i++) {
                    id = tbl_YourCart.getValueAt(i, 0).toString();
                    if (pName.equals(id)) {
                        listedQuantity = (Integer) tbl_YourCart.getValueAt(i, 2);
                        break;
                    }
                }
            }

            if (pName.equals(id)) {
                int totalQuantity = quantity + listedQuantity;
                totalPrice = totalQuantity * price;
                orderData.setValueAt(totalQuantity, i, 2);
                orderData.setValueAt(totalPrice, i, 3);
            } else {
                orderData.addRow(data);
            }

            updateProductAvail(pName, quantity);        //updates the current available stock based on current orders

            fh.writeAuditTrail("The item: " + pName + " count: " + quantity + " added to list. " + getTimeStamp());
        } else {
            JOptionPane.showMessageDialog(this, "Item out of stock.");
        }
    }

    private void updateProductAvail(String productName, int orderQuantity) {
        for (Products product : prod.productList) {
            if (product.getProductName().equals(productName)) {
                int currAvail = product.getProductAvail();
                int temp = currAvail - orderQuantity;
                product.setProductAvail(currAvail - orderQuantity);
                txt_productPanel_Quantity.setText("" + temp);
                txt_reviewPanel_CurrentStock.setText("" + temp);
            }
        }
    }

    private static boolean isEmpty(JTable jTable) {
        /* method to check if table is empty */
        if (jTable != null && jTable.getModel() != null) {
            return jTable.getModel().getRowCount() <= 0;
        }
        return false;
    }

    private void btn_reviewPanel_ResumeShoppingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reviewPanel_ResumeShoppingActionPerformed
        CardLayout card = (CardLayout) transactionPanel.getLayout();
        card.show(transactionPanel, "productCard");

        if (orderData.getRowCount() > 0) {
            btn_productPanel_Checkout.setVisible(true);
        } else {
            btn_productPanel_Checkout.setVisible(false);
        }

        txt_productPanel_OrderQuantity.setText("");
    }//GEN-LAST:event_btn_reviewPanel_ResumeShoppingActionPerformed

    private void btn_cartPanel_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cartPanel_CancelActionPerformed
        cancelTransaction();
    }//GEN-LAST:event_btn_cartPanel_CancelActionPerformed

    private void btn_cartPanel_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cartPanel_RemoveActionPerformed
        /* Remove from cart button on Cart Panel */
        try {
            int selectedRow = tbl_YourCart.getSelectedRow();
            String name = (String) orderData.getValueAt(selectedRow, 0);
            int count = (Integer) orderData.getValueAt(selectedRow, 2);

            for (Products product : prod.productList) {
                if (name.equals(product.getProductName())) {
                    int currAvail = product.getProductAvail();
                    int temp = currAvail + count;
                    product.setProductAvail(temp);
                    txt_productPanel_Quantity.setText("" + temp);
                }
            }

            orderData.removeRow(selectedRow);

            fh.writeAuditTrail("The item: " + name + " count: " + count + " removed from list. " + getTimeStamp());
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "No item selected.");
        }
    }//GEN-LAST:event_btn_cartPanel_RemoveActionPerformed

    private void btn_reviewPanel_CancelOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reviewPanel_CancelOrderActionPerformed
        CardLayout card = (CardLayout) transactionPanel.getLayout();
        card.show(transactionPanel, "productCard");
        txt_productPanel_OrderQuantity.setText("");
    }//GEN-LAST:event_btn_reviewPanel_CancelOrderActionPerformed

    private void btn_cartPanel_AddMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cartPanel_AddMoreActionPerformed
        CardLayout card = (CardLayout) transactionPanel.getLayout();
        card.show(transactionPanel, "productCard");
        if (orderData.getRowCount() > 0) {
            btn_productPanel_Checkout.setVisible(true);
        } else {
            btn_productPanel_Checkout.setVisible(false);
        }
        txt_productPanel_OrderQuantity.setText("");
    }//GEN-LAST:event_btn_cartPanel_AddMoreActionPerformed

    private void btn_summaryPanel_MainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_summaryPanel_MainMenuActionPerformed
        CardLayout card = (CardLayout) mainMenu.getLayout();
        card.show(mainMenu, "menuCard");
    }//GEN-LAST:event_btn_summaryPanel_MainMenuActionPerformed

    private void btn_menuPanel_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menuPanel_ExitActionPerformed
        int n = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?", "Exit", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btn_menuPanel_ExitActionPerformed

    private void itmExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmExitActionPerformed
        int n = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?", "Exit", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_itmExitActionPerformed

    private void itmOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmOrderActionPerformed
        CardLayout card = (CardLayout) mainMenu.getLayout();
        card.show(mainMenu, "orderCard");
    }//GEN-LAST:event_itmOrderActionPerformed

    private void itmInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmInvActionPerformed
        CardLayout card = (CardLayout) mainMenu.getLayout();
        card.show(mainMenu, "invCard");
    }//GEN-LAST:event_itmInvActionPerformed

    private void btn_reviewPanel_CheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reviewPanel_CheckoutActionPerformed
        CardLayout card = (CardLayout) transactionPanel.getLayout();
        card.show(transactionPanel, "cartCard");
    }//GEN-LAST:event_btn_reviewPanel_CheckoutActionPerformed

    private void btn_productPanel_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_productPanel_CancelActionPerformed
        cancelTransaction();
    }//GEN-LAST:event_btn_productPanel_CancelActionPerformed

    private void btn_reviewPanel_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reviewPanel_CancelActionPerformed
        cancelTransaction();
    }//GEN-LAST:event_btn_reviewPanel_CancelActionPerformed

    private void btn_menuPanel_ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menuPanel_ViewActionPerformed
        CardLayout card = (CardLayout) mainMenu.getLayout();
        card.show(mainMenu, "invCard");
    }//GEN-LAST:event_btn_menuPanel_ViewActionPerformed

    private void btn_menuPanel_NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menuPanel_NewActionPerformed

        trans.started = true;
        trans.complete = false;
        prod.emptyProductList();
        cmbProducts.removeAllItems();
        txt_cartPanel_Cash.setText("");
        btn_productPanel_Checkout.setVisible(false);

        refreshProductList();

        itmOrder.setVisible(true);
        CardLayout card = (CardLayout) mainMenu.getLayout();
        card.show(mainMenu, "orderCard");
        card = (CardLayout) transactionPanel.getLayout();
        card.show(transactionPanel, "productCard");
        String currTrans = "Transaction No. " + trans.transNumber;
        lblTransNo.setText(currTrans);
        lblTransNo1.setText(currTrans);
        lblTransNo3.setText(currTrans);
        lblTransNo4.setText(currTrans);
        try {
            orderData.setRowCount(0);
        } catch (NullPointerException e) {
        }
    }//GEN-LAST:event_btn_menuPanel_NewActionPerformed

    private void btn_inventoryPanel_MainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inventoryPanel_MainMenuActionPerformed
        CardLayout card = (CardLayout) mainMenu.getLayout();
        card.show(mainMenu, "menuCard");
    }//GEN-LAST:event_btn_inventoryPanel_MainMenuActionPerformed

    private void btn_addItemPanel_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addItemPanel_CancelActionPerformed
        txt_addItemPanel_AvailStock.setText("");
        txt_addItemPanel_Price.setText("");
        txt_addItemPanel_ProductName.setText("");
        CardLayout card = (CardLayout) inventoryPanel.getLayout();
        card.show(inventoryPanel, "view");
    }//GEN-LAST:event_btn_addItemPanel_CancelActionPerformed

    private void btn_inventoryPanel_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inventoryPanel_AddActionPerformed
        String[] options = {"New", "Existing", "Cancel"};
        int n = JOptionPane.showOptionDialog(this, "", "Select Add Mode", JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, options, options[2]);
        CardLayout card = (CardLayout) inventoryPanel.getLayout();
        if (n == JOptionPane.YES_OPTION) {
            card.show(inventoryPanel, "add");
            txt_addItemPanel_AvailStock.setText("");
            txt_addItemPanel_Price.setText("");
            txt_addItemPanel_ProductName.setText("");
        } else if (n == JOptionPane.NO_OPTION) {
            card.show(inventoryPanel, "existing");
            txt_addExistingPanel_AddStock.setText("");
        }
    }//GEN-LAST:event_btn_inventoryPanel_AddActionPerformed

    private void btn_addItemPanel_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addItemPanel_AddActionPerformed
        try {
            int availStock = Integer.parseInt(txt_addItemPanel_AvailStock.getText());
            double price = Double.parseDouble(txt_addItemPanel_Price.getText());

            if (availStock > 0 && price >= 0) {
                if (price == 0) {
                    int n = JOptionPane.showConfirmDialog(this, "Add this item as a FREE product?", "FREE PRODUCT", JOptionPane.YES_NO_OPTION);
                    if (n == JOptionPane.YES_OPTION) {
                        addToInventory(price, availStock);
                    }
                } else {
                    addToInventory(price, availStock);
                }
            } else if (availStock < 0 || price < 0) {
                JOptionPane.showMessageDialog(this, "Invalid input. (Input: one or more fields contain negative value)");
            } else if (availStock == 0) {
                JOptionPane.showMessageDialog(this, "Invalid input. (Input: zero value)");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input. (Input: not a number)");
        }
    }//GEN-LAST:event_btn_addItemPanel_AddActionPerformed

    private void addToInventory(double price, int availStock) {
        String name = txt_addItemPanel_ProductName.getText();
        boolean existing = false;

        for (Products product : prod.productList) {
            if (name.trim().equalsIgnoreCase(product.getProductName().trim())) {
                existing = true;
                break;
            }
        }
        if (existing) {
            JOptionPane.showMessageDialog(this, "Duplicate found! Existing product.");
        } else {
            prod.productList.add(new Products(name, price, availStock));
            fh.writeInventoryLog("Item: " + name + " count: " + availStock + " price: " + price + " per item added to inventory. " + getTimeStamp());
            fh.updateCSV(prod.productList);

            prod.emptyProductList();
            cmbExistingProducts.removeAllItems();
            refreshProductList();

            CardLayout card = (CardLayout) inventoryPanel.getLayout();
            card.show(inventoryPanel, "view");
        }
    }
    private void itmLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmLogoutActionPerformed
        LoginForm login = new LoginForm();
        login.setVisible(true);
        login.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_itmLogoutActionPerformed

    private void btn_cartPanel_EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cartPanel_EditActionPerformed
        if (tbl_YourCart.getSelectedRow() != -1) {
            JPanel panel = new JPanel();
            JLabel label = new JLabel("Enter password: ");
            JPasswordField pass = new JPasswordField(10);
            panel.add(label);
            panel.add(pass);
            String[] options = new String[]{"OK", "Cancel"};

            boolean match = false;
            OUTER:
            while (!match) {
                int option = JOptionPane.showOptionDialog(null, panel, "Call admin for assistance!",
                        JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                        null, options, options[1]);

                char[] password = pass.getPassword();

                if (option == 0) {
                    if ("1234".equals(new String(password))) {
                        boolean accepted = false;
                        while (!accepted) {
                            String answer = JOptionPane.showInputDialog("Edit quantity: ");
                            if ((answer != null) && (answer.length() > 0)) {

                                try {
                                    int quantity = Integer.parseInt(answer);

                                    if (quantity > 0) {
                                        String name = tbl_YourCart.getModel().getValueAt(tbl_YourCart.getSelectedRow(), 0).toString();
                                        double price = (Double) tbl_YourCart.getModel().getValueAt(tbl_YourCart.getSelectedRow(), 1);
                                        int currentQuantity = (Integer) tbl_YourCart.getModel().getValueAt(tbl_YourCart.getSelectedRow(), 2);

                                        int diff = quantity - currentQuantity;
                                        boolean sufficient = true;
                                        for (Products product : prod.productList) {
                                            if (product.getProductName().equals(name)) {
                                                int currAvail = product.getProductAvail();
                                                int temp = currAvail - diff;

                                                if (temp >= 0) {
                                                    product.setProductAvail(temp);
                                                    txt_productPanel_Quantity.setText("" + temp);
                                                    txt_reviewPanel_CurrentStock.setText("" + temp);
                                                } else if (temp < 0) {
                                                    JOptionPane.showMessageDialog(this, "Insufficient stock.");
                                                    sufficient = false;
                                                }
                                            }
                                        }
                                        if (sufficient) {
                                            tbl_YourCart.getModel().setValueAt(quantity, tbl_YourCart.getSelectedRow(), 2);
                                            tbl_YourCart.getModel().setValueAt(price * quantity, tbl_YourCart.getSelectedRow(), 3);
                                            fh.writeAuditTrail("The item: " + name + " count: " + quantity + " edited from: " + currentQuantity + " in cart. " + getTimeStamp());
                                            accepted = true;
                                        }
                                    } else if (quantity == 0) {
                                        JOptionPane.showMessageDialog(this, "Invalid input. (Input: cannot be zero)");
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Invalid input. (Input: negative value)");
                                    }
                                } catch (NumberFormatException ex) {
                                    JOptionPane.showMessageDialog(this, "Invalid input. (Input: not a number.)");
                                }
                                match = true;
                            } else if (answer == null) {
                                break OUTER;
                            } else {
                                JOptionPane.showMessageDialog(this, "No input!");
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Access denied!");
                    }
                } else {
                    break;
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No selected item.");
        }
    }//GEN-LAST:event_btn_cartPanel_EditActionPerformed

    private void btn_inventoryPanel_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inventoryPanel_UpdateActionPerformed
        if (tbl_Inventory.getSelectedRow() != -1) {
            String answer = JOptionPane.showInputDialog("Edit price: ");
            if ((answer != null) && (answer.length() > 0)) {
                try {
                    double price = Double.parseDouble(answer);

                    if (price >= 0) {
                        String name = (String) tbl_Inventory.getModel().getValueAt(tbl_Inventory.getSelectedRow(), 0);
                        if (price == 0) {
                            int n = JOptionPane.showConfirmDialog(this, "Product will be FREE. Continue?", "FREE PRODUCT PROMO", JOptionPane.YES_NO_OPTION);
                            if (n == JOptionPane.YES_OPTION) {
                                updatePrice(name, price);
                            }
                        } else {
                            updatePrice(name, price);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Invalid input. (Input: negative value)");
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Invalid input. (Input: not a number)");
                } catch (ArrayIndexOutOfBoundsException e) {
                    JOptionPane.showMessageDialog(this, "No selected item.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No item selected.");
        }
    }//GEN-LAST:event_btn_inventoryPanel_UpdateActionPerformed

    private void updatePrice(String name, double price) {
        double previousPrice = 0;
        for (Products product : prod.productList) {
            if (product.getProductName().equals(name)) {
                previousPrice = product.getProductPrice();
                product.setProductPrice(price);
            }
        }
        fh.writeInventoryLog("Item: " + name + " updated price from: " + previousPrice + " to: " + price + ". " + getTimeStamp());
        fh.updateCSV(prod.productList);
        prod.emptyProductList();
        cmbExistingProducts.removeAllItems();
        refreshProductList();
    }
    private void btn_addExistingPanel_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addExistingPanel_AddActionPerformed
        try {
            int toAdd = (Integer.parseInt(txt_addExistingPanel_AddStock.getText()));

            if (toAdd > 0) {
                String name = cmbExistingProducts.getSelectedItem().toString();

                double price = Double.parseDouble(txt_addExistingPanel_Price.getText().substring(1, txt_addExistingPanel_Price.getText().length()));

                String id = null;
                int listedQuantity = 0;
                int i = 0;
                for (i = 0; i < prod.productList.size(); i++) {
                    id = prod.productList.get(i).getProductName();
                    if (name.equals(id)) {
                        listedQuantity = (Integer) prod.productList.get(i).getProductAvail();
                        break;
                    }
                }

                if (name.equals(id)) {
                    int totalQuantity = toAdd + listedQuantity;
                    prod.productList.get(i).setProductAvail(totalQuantity);
                    fh.writeInventoryLog("Item: " + name + " count: " + toAdd + " added to existing: " + listedQuantity + " available stocks. Total: " + totalQuantity + " " + getTimeStamp());
                } else {
                    prod.productList.add(new Products(name, price, toAdd));
                    fh.writeInventoryLog("Item: " + name + " count: " + toAdd + " price: " + price + " per item added to inventory. " + getTimeStamp());
                }

                fh.updateCSV(prod.productList);

                CardLayout card = (CardLayout) inventoryPanel.getLayout();
                card.show(inventoryPanel, "view");
                
                prod.emptyProductList();
                cmbExistingProducts.removeAllItems();
                refreshProductList();
            } else if (toAdd < 0) {
                JOptionPane.showMessageDialog(this, "Invalid input. (Input: negative value)");
            } else {
                JOptionPane.showMessageDialog(this, "Invalid input. (Input: zero value)");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input. (Input: not a number)");
        }
    }//GEN-LAST:event_btn_addExistingPanel_AddActionPerformed

    private void btn_addExistingPanel_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addExistingPanel_CancelActionPerformed
        CardLayout card = (CardLayout) inventoryPanel.getLayout();
        card.show(inventoryPanel, "view");
    }//GEN-LAST:event_btn_addExistingPanel_CancelActionPerformed

    private void btn_productPanel_CheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_productPanel_CheckoutActionPerformed
        CardLayout card = (CardLayout) transactionPanel.getLayout();
        card.show(transactionPanel, "cartCard");
    }//GEN-LAST:event_btn_productPanel_CheckoutActionPerformed

    private void cmbExistingProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbExistingProductsActionPerformed
        for (Products product : prod.productList) {
            if (cmbExistingProducts.getSelectedItem().toString().trim().toLowerCase().equals(product.getProductName().trim().toLowerCase())) {
                txt_addExistingPanel_AvailStock.setText("" + product.getProductAvail());
                txt_addExistingPanel_Price.setText("P" + product.getProductPrice());
                break;
            }
        }
    }//GEN-LAST:event_cmbExistingProductsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HEADER;
    private javax.swing.JPanel HEADER1;
    private javax.swing.JPanel HEADER10;
    private javax.swing.JPanel HEADER2;
    private javax.swing.JPanel HEADER3;
    private javax.swing.JPanel HEADER4;
    private javax.swing.JPanel HEADER7;
    private javax.swing.JPanel HEADER9;
    private javax.swing.JPanel addExistingPanel;
    private javax.swing.JPanel addNewPanel;
    private javax.swing.JButton btn_addExistingPanel_Add;
    private javax.swing.JButton btn_addExistingPanel_Cancel;
    private javax.swing.JButton btn_addItemPanel_Add;
    private javax.swing.JButton btn_addItemPanel_Cancel;
    private javax.swing.JButton btn_cartPanel_AddMore;
    private javax.swing.JButton btn_cartPanel_Cancel;
    private javax.swing.JButton btn_cartPanel_Edit;
    private javax.swing.JButton btn_cartPanel_Remove;
    private javax.swing.JButton btn_cartPanel_Transact;
    private javax.swing.JButton btn_inventoryPanel_Add;
    private javax.swing.JButton btn_inventoryPanel_MainMenu;
    private javax.swing.JButton btn_inventoryPanel_Update;
    private javax.swing.JButton btn_menuPanel_Exit;
    private javax.swing.JButton btn_menuPanel_New;
    private javax.swing.JButton btn_menuPanel_View;
    private javax.swing.JButton btn_productPanel_Cancel;
    private javax.swing.JButton btn_productPanel_Checkout;
    private javax.swing.JButton btn_productPanel_Order;
    private javax.swing.JButton btn_reviewPanel_AddToCart;
    private javax.swing.JButton btn_reviewPanel_Cancel;
    private javax.swing.JButton btn_reviewPanel_CancelOrder;
    private javax.swing.JButton btn_reviewPanel_Checkout;
    private javax.swing.JButton btn_reviewPanel_ResumeShopping;
    private javax.swing.JButton btn_summaryPanel_MainMenu;
    private javax.swing.JPanel cartPanel;
    private javax.swing.JComboBox<String> cmbExistingProducts;
    private javax.swing.JComboBox<String> cmbProducts;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JPanel inventoryPanel;
    private javax.swing.JMenuItem itmExit;
    private javax.swing.JMenuItem itmInv;
    private javax.swing.JMenuItem itmLogout;
    private javax.swing.JMenuItem itmOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAddStock;
    private javax.swing.JLabel lblAdditem;
    private javax.swing.JLabel lblAdditem1;
    private javax.swing.JLabel lblAvailableStock;
    private javax.swing.JLabel lblAvailableStock1;
    private javax.swing.JLabel lblChange;
    private javax.swing.JLabel lblCurrStock;
    private javax.swing.JLabel lblHowManyOrders;
    private javax.swing.JLabel lblItemCount;
    private javax.swing.JLabel lblOrderedPrice;
    private javax.swing.JLabel lblPName;
    private javax.swing.JLabel lblPName1;
    private javax.swing.JLabel lblPaidAmount;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblPriceInv;
    private javax.swing.JLabel lblPriceInv1;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblProductName1;
    private javax.swing.JLabel lblSelect;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblSubtotal;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalPriceWithVat;
    private javax.swing.JLabel lblTransNo;
    private javax.swing.JLabel lblTransNo1;
    private javax.swing.JLabel lblTransNo3;
    private javax.swing.JLabel lblTransNo4;
    private javax.swing.JLabel lblUser;
    private javax.swing.JLabel lblVAT;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel logo1;
    private javax.swing.JLabel logo10;
    private javax.swing.JLabel logo2;
    private javax.swing.JLabel logo3;
    private javax.swing.JLabel logo4;
    private javax.swing.JLabel logo7;
    private javax.swing.JLabel logo9;
    private javax.swing.JPanel mainMenu;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JPanel productPanel;
    private javax.swing.JPanel reviewPanel;
    private javax.swing.JPanel summaryPanel;
    private javax.swing.JTable tbl_Inventory;
    private javax.swing.JTable tbl_Receipt;
    private javax.swing.JTable tbl_YourCart;
    private javax.swing.JPanel transactionPanel;
    private javax.swing.JTextField txt_addExistingPanel_AddStock;
    private javax.swing.JTextField txt_addExistingPanel_AvailStock;
    private javax.swing.JTextField txt_addExistingPanel_Price;
    private javax.swing.JTextField txt_addItemPanel_AvailStock;
    private javax.swing.JTextField txt_addItemPanel_Price;
    private javax.swing.JTextField txt_addItemPanel_ProductName;
    private javax.swing.JTextField txt_cartPanel_Cash;
    private javax.swing.JTextField txt_cartPanel_TotalPrice;
    private javax.swing.JTextField txt_productPanel_Name;
    private javax.swing.JTextField txt_productPanel_OrderQuantity;
    private javax.swing.JTextField txt_productPanel_Price;
    private javax.swing.JTextField txt_productPanel_Quantity;
    private javax.swing.JTextField txt_reviewPanel_CurrentStock;
    private javax.swing.JTextField txt_reviewPanel_Name;
    private javax.swing.JTextField txt_reviewPanel_OrderQuantity;
    private javax.swing.JTextField txt_reviewPanel_Price;
    private javax.swing.JTextField txt_summaryPanel_Change;
    private javax.swing.JTextField txt_summaryPanel_ItemCount;
    private javax.swing.JTextField txt_summaryPanel_PaidAmount;
    private javax.swing.JTextField txt_summaryPanel_Subtotal;
    private javax.swing.JTextField txt_summaryPanel_Total;
    private javax.swing.JTextField txt_summaryPanel_VAT;
    private javax.swing.JPanel viewInventoryPanel;
    // End of variables declaration//GEN-END:variables
}
